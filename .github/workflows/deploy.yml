name: Deploy React to Instance

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: GCP-APPLE
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm ci

      - name: Build React App
        run: npm run build
        continue-on-error: false

      - name: Debug SSH Key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}"

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ vars.INSTANCE_IP }} >> ~/.ssh/known_hosts

      - name: SSH into Instance and Prepare Server
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ vars.INSTANCE_IP }}
          username: ${{ vars.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "ðŸ”„ Removing old build files..."
            sudo rm -rf /var/www/neon/*
            echo "âœ… Old files removed."
            sudo mkdir -p /var/www/neon
            sudo chown -R $USER:$USER /var/www/neon
            sudo chmod -R 777 /var/www/neon
          
      - name: Upload Build Files to Instance
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.INSTANCE_IP }}
          username: ${{ vars.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "build/*"
          target: "/var/www/neon/"

      - name: Restart Nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.INSTANCE_IP }}
          username: ${{ vars.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "ðŸ”„ Restarting Nginx..."
            sudo systemctl restart nginx
            echo "âœ… Deployment complete!"
